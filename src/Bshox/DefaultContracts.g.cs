// This file was generated by a T4 Text Template. Modify "DefaultContracts.tt" instead of editing this file directly.
#nullable enable
#pragma warning disable CA1720 // Identifier contains type name

namespace Bshox;

partial class DefaultContracts
{
    /// <summary>
    /// A Bshox contract for <c>sbyte</c>
    /// </summary>
    public static BshoxContract<sbyte> SByte { get; } = new SByteContract();

    private sealed partial class SByteContract() : BshoxContract<sbyte>(BshoxCode.VarInt)
    {
        public override void Deserialize(ref BshoxReader reader, out sbyte value) => value = unchecked((sbyte)checked((byte)reader.ReadVarInt32()));
        public override void Serialize(ref BshoxWriter writer, scoped ref readonly sbyte value) => writer.WriteVarInt32(unchecked((byte)value));
    }

    /// <summary>
    /// A Bshox contract for <c>byte</c>
    /// </summary>
    public static BshoxContract<byte> Byte { get; } = new ByteContract();

    private sealed partial class ByteContract() : BshoxContract<byte>(BshoxCode.VarInt)
    {
        public override void Deserialize(ref BshoxReader reader, out byte value) => value = checked((byte)reader.ReadVarInt32());
        public override void Serialize(ref BshoxWriter writer, scoped ref readonly byte value) => writer.WriteVarInt32(value);
    }

    /// <summary>
    /// A Bshox contract for <c>short</c>
    /// </summary>
    public static BshoxContract<short> Int16 { get; } = new Int16Contract();

    private sealed partial class Int16Contract() : BshoxContract<short>(BshoxCode.VarInt)
    {
        public override void Deserialize(ref BshoxReader reader, out short value) => value = unchecked((short)checked((ushort)reader.ReadVarInt32()));
        public override void Serialize(ref BshoxWriter writer, scoped ref readonly short value) => writer.WriteVarInt32(unchecked((ushort)value));
    }

    /// <summary>
    /// A Bshox contract for <c>ushort</c>
    /// </summary>
    public static BshoxContract<ushort> UInt16 { get; } = new UInt16Contract();

    private sealed partial class UInt16Contract() : BshoxContract<ushort>(BshoxCode.VarInt)
    {
        public override void Deserialize(ref BshoxReader reader, out ushort value) => value = checked((ushort)reader.ReadVarInt32());
        public override void Serialize(ref BshoxWriter writer, scoped ref readonly ushort value) => writer.WriteVarInt32(value);
    }

    /// <summary>
    /// A Bshox contract for <c>char</c>
    /// </summary>
    public static BshoxContract<char> Char { get; } = new CharContract();

    private sealed partial class CharContract() : BshoxContract<char>(BshoxCode.VarInt)
    {
        public override void Deserialize(ref BshoxReader reader, out char value) => value = checked((char)reader.ReadVarInt32());
        public override void Serialize(ref BshoxWriter writer, scoped ref readonly char value) => writer.WriteVarInt32((uint)value);
    }

    /// <summary>
    /// A Bshox contract for <c>int</c>
    /// </summary>
    public static BshoxContract<int> Int32 { get; } = new Int32Contract();

    private sealed partial class Int32Contract() : BshoxContract<int>(BshoxCode.VarInt)
    {
        public override void Deserialize(ref BshoxReader reader, out int value) => value = unchecked((int)reader.ReadVarInt32());
        public override void Serialize(ref BshoxWriter writer, scoped ref readonly int value) => writer.WriteVarInt32(unchecked((uint)value));
    }

    /// <summary>
    /// A Bshox contract for <c>int</c>
    /// </summary>
    public static BshoxContract<int> Int32Z { get; } = new Int32ZContract();

    private sealed partial class Int32ZContract() : BshoxContract<int>(BshoxCode.VarInt)
    {
        public override void Deserialize(ref BshoxReader reader, out int value) => value = reader.ReadZigZagVarInt32();
        public override void Serialize(ref BshoxWriter writer, scoped ref readonly int value) => writer.WriteZigZagVarInt32(value);
    }

    /// <summary>
    /// A Bshox contract for <c>uint</c>
    /// </summary>
    public static BshoxContract<uint> UInt32 { get; } = new UInt32Contract();

    private sealed partial class UInt32Contract() : BshoxContract<uint>(BshoxCode.VarInt)
    {
        public override void Deserialize(ref BshoxReader reader, out uint value) => value = reader.ReadVarInt32();
        public override void Serialize(ref BshoxWriter writer, scoped ref readonly uint value) => writer.WriteVarInt32(value);
    }

    /// <summary>
    /// A Bshox contract for <c>ulong</c>
    /// </summary>
    public static BshoxContract<ulong> UInt64 { get; } = new UInt64Contract();

    private sealed partial class UInt64Contract() : BshoxContract<ulong>(BshoxCode.VarInt)
    {
        public override void Deserialize(ref BshoxReader reader, out ulong value) => value = reader.ReadVarInt64();
        public override void Serialize(ref BshoxWriter writer, scoped ref readonly ulong value) => writer.WriteVarInt64(value);
    }

    /// <summary>
    /// A Bshox contract for <c>long</c>
    /// </summary>
    public static BshoxContract<long> Int64 { get; } = new Int64Contract();

    private sealed partial class Int64Contract() : BshoxContract<long>(BshoxCode.VarInt)
    {
        public override void Deserialize(ref BshoxReader reader, out long value) => value = unchecked((long)reader.ReadVarInt64());
        public override void Serialize(ref BshoxWriter writer, scoped ref readonly long value) => writer.WriteVarInt64(unchecked((ulong)value));
    }

    /// <summary>
    /// A Bshox contract for <c>long</c>
    /// </summary>
    public static BshoxContract<long> Int64Z { get; } = new Int64ZContract();

    private sealed partial class Int64ZContract() : BshoxContract<long>(BshoxCode.VarInt)
    {
        public override void Deserialize(ref BshoxReader reader, out long value) => value = reader.ReadZigZagVarInt64();
        public override void Serialize(ref BshoxWriter writer, scoped ref readonly long value) => writer.WriteZigZagVarInt64(value);
    }

    /// <summary>
    /// A Bshox contract for <c>float</c>
    /// </summary>
    public static BshoxContract<float> Single { get; } = new SingleContract();

    private sealed partial class SingleContract() : BshoxContract<float>(BshoxCode.Fixed4), ISpanContract<float>
    {
        public override void Deserialize(ref BshoxReader reader, out float value) => value = reader.ReadSingle();
        public override void Serialize(ref BshoxWriter writer, scoped ref readonly float value) => writer.WriteSingle(value);
        public partial void Deserialize(ref BshoxReader reader, Span<float> destination);
        public partial void Serialize(ref BshoxWriter writer, ReadOnlySpan<float> values);
    }

    /// <summary>
    /// A Bshox contract for <c>double</c>
    /// </summary>
    public static BshoxContract<double> Double { get; } = new DoubleContract();

    private sealed partial class DoubleContract() : BshoxContract<double>(BshoxCode.Fixed8), ISpanContract<double>
    {
        public override void Deserialize(ref BshoxReader reader, out double value) => value = reader.ReadDouble();
        public override void Serialize(ref BshoxWriter writer, scoped ref readonly double value) => writer.WriteDouble(value);
        public partial void Deserialize(ref BshoxReader reader, Span<double> destination);
        public partial void Serialize(ref BshoxWriter writer, ReadOnlySpan<double> values);
    }

    /// <summary>
    /// A Bshox contract for <c>string</c>
    /// </summary>
    public static BshoxContract<string> String { get; } = new StringContract();

    private sealed partial class StringContract() : BshoxContract<string>(BshoxCode.Prefixed)
    {
        public override void Deserialize(ref BshoxReader reader, out string value) => value = reader.ReadString();
        public override void Serialize(ref BshoxWriter writer, scoped ref readonly string value) => writer.WriteString(value);
    }

    /// <summary>
    /// A Bshox contract for <c>bool</c>
    /// </summary>
    public static BshoxContract<bool> Boolean { get; } = new BooleanContract();

    private sealed partial class BooleanContract() : BshoxContract<bool>(BshoxCode.VarInt)
    {
        public override void Deserialize(ref BshoxReader reader, out bool value) => value = reader.ReadByte() != 0;
        public override void Serialize(ref BshoxWriter writer, scoped ref readonly bool value) => writer.WriteByte(value ? (byte)1 : (byte)0);
    }

    /// <summary>
    /// A Bshox contract for <c>byte[]</c>
    /// </summary>
    public static BshoxContract<byte[]> ByteArray { get; } = new ByteArrayContract();

    private sealed partial class ByteArrayContract() : BshoxContract<byte[]>(BshoxCode.Prefixed)
    {
        public override void Deserialize(ref BshoxReader reader, out byte[] value) => value = reader.ReadByteArray();
        public override void Serialize(ref BshoxWriter writer, scoped ref readonly byte[] value) => writer.WriteByteArray(value);
    }

    /// <summary>
    /// A Bshox contract for <c>System.Guid</c>
    /// </summary>
    public static BshoxContract<System.Guid> Guid { get; } = new GuidContract();

    private sealed partial class GuidContract() : BshoxContract<System.Guid>(BshoxCode.Prefixed)
    {
        public override partial void Deserialize(ref BshoxReader reader, out System.Guid value);
        public override partial void Serialize(ref BshoxWriter writer, scoped ref readonly System.Guid value);
    }

    /// <summary>
    /// A Bshox contract for <c>System.DateTime</c>
    /// </summary>
    public static BshoxContract<System.DateTime> DateTime { get; } = new DateTimeContract();

    private sealed partial class DateTimeContract() : BshoxContract<System.DateTime>(BshoxCode.Fixed8)
    {
        public override partial void Deserialize(ref BshoxReader reader, out System.DateTime value);
        public override partial void Serialize(ref BshoxWriter writer, scoped ref readonly System.DateTime value);
    }

    /// <summary>
    /// A Bshox contract for <c>System.TimeSpan</c>
    /// </summary>
    public static BshoxContract<System.TimeSpan> TimeSpan { get; } = new TimeSpanContract();

    private sealed partial class TimeSpanContract() : BshoxContract<System.TimeSpan>(BshoxCode.VarInt)
    {
        public override partial void Deserialize(ref BshoxReader reader, out System.TimeSpan value);
        public override partial void Serialize(ref BshoxWriter writer, scoped ref readonly System.TimeSpan value);
    }

}
