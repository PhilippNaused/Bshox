<#@ template debug="false" hostSpecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Text.Json" #>
<#@ assembly name="System.Memory" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text.Json" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".g.cs" #>
// This file was generated by a T4 Text Template. Modify "KnownTypeInfo.tt" instead of editing this file directly.

namespace Bshox.Generator.Contracts;

partial struct KnownTypeInfo
{
<#
    // load GeneratedContracts.json
    string filePath = this.Host.ResolvePath("../../GeneratedContracts.json");
    string json = File.ReadAllText(filePath);
    var contracts = JsonSerializer.Deserialize<Contracts>(json);
    foreach (var type in contracts.Primitives.Where(p => p.Write is not null))
    {
#>
    private static readonly KnownTypeInfo <#= type.Name #> = new("<#= type.Name #>", "<#= type.Write #>;", "<#= type.Read #>", BshoxCode.<#= type.Encoding #>);
<#
    }
    foreach (var type in contracts.Primitives.Where(p => p.Write is null))
    {
#>
    private static readonly KnownTypeInfo <#= type.Name #> = new("<#= type.Name #>");
<#
    }
#>
}
<#+
    class Contracts
    {
        public Primitive[] Primitives { get; set; }
    }

    class Contract
    {
        public string Name { get; set; }
        public string Type { get; set; }
    }

    class Primitive : Contract
    {
        public string Encoding { get; set; }
        public string Read { get; set; }
        public string Write { get; set; }
    }
#>
