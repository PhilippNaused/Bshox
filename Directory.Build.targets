<Project>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.CodeStyle">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="gen/**/*.cs" />
    <Compile Remove="Snapshots/**/*" />
    <None Include="Snapshots/**/*" />
  </ItemGroup>

  <Target Name="IncludeAnalyzersInPackage">
    <MSBuild Projects="@(ProjectReference->WithMetadataValue('PackAsAnalyzer', 'true'))"
             Targets="GetAnalyzerPackFiles"
             RemoveProperties="SetTargetFramework">
      <Output TaskParameter="TargetOutputs"
              ItemName="_AnalyzerFile" />
    </MSBuild>

    <ItemGroup>
      <Content Include="@(_AnalyzerFile)"
               Pack="True"
               Condition="!%(_AnalyzerFile.IsSymbol)" />
      <_TargetPathsToSymbols Include="@(_AnalyzerFile)"
                             TargetPath="/%(_AnalyzerFile.PackagePath)"
                             Condition="%(_AnalyzerFile.IsSymbol)" />
    </ItemGroup>
  </Target>

  <Target Name="GetAnalyzerPackFiles"
          DependsOnTargets="$(GenerateNuspecDependsOn)"
          Returns="@(_AnalyzerPackFile)">
    <PropertyGroup>
      <_analyzerPath>analyzers/dotnet</_analyzerPath>
      <_analyzerPath Condition="'$(AnalyzerRoslynVersion)' != ''">$(_analyzerPath)/roslyn$(AnalyzerRoslynVersion)</_analyzerPath>
      <_analyzerPath Condition="'$(AnalyzerLanguage)' != ''">$(_analyzerPath)/$(AnalyzerLanguage)</_analyzerPath>
    </PropertyGroup>

    <!-- Filter on netstandard2.0 so that generator projects can multi-target for the purpose of enabling nullable reference type compiler checks. -->
    <ItemGroup>
      <_AnalyzerPackFile Include="@(_BuildOutputInPackage-&gt;WithMetadataValue('TargetFramework', 'netstandard2.0'))"
                         IsSymbol="false" />
      <_AnalyzerPackFile Include="@(_TargetPathsToSymbols-&gt;WithMetadataValue('TargetFramework', 'netstandard2.0'))"
                         IsSymbol="true" />
      <_AnalyzerPackFile PackagePath="$(_analyzerPath)/%(TargetPath)" />
    </ItemGroup>

    <Error Condition="'@(_AnalyzerPackFile)' == ''"
           Text="Analyzers must target netstandard2.0 since they run in the compiler which targets netstandard2.0. $(MSBuildProjectFullPath) targets '$([MSBuild]::ValueOrDefault('$(TargetFrameworks)', '$(TargetFramework)'))' instead." />
  </Target>

  <Target Name="PublishAll"
          Condition=" '$(TargetFramework)' == '' ">
    <!-- https://stackoverflow.com/questions/43947599/how-to-publish-for-all-target-frameworks -->
    <ItemGroup>
      <_PublishFramework Include="$(TargetFrameworks)" />
    </ItemGroup>
    <ItemGroup>
      <_Project Include="$(MSBuildProjectFile)"
                AdditionalProperties="TargetFramework=%(_PublishFramework.Identity);PublishDir=$([System.IO.Path]::Combine('$(PublishDir)', '%(_PublishFramework.Identity)'))" />
    </ItemGroup>
    <MSBuild Projects="@(_Project)"
             BuildInParallel="true"
             Targets="Publish" />
  </Target>

</Project>