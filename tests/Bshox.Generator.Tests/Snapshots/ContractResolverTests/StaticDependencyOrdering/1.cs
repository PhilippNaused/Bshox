// <auto-generated />
#nullable enable
#pragma warning disable

using bsx = global::Bshox;

using _gen_bshox_t = global::TestModels.Serializer2;

namespace TestModels;

/// <summary>
/// A source generated Bshox serializer that can serialize the following types:
/// <para><see cref="global::TestModels.TestType2" /></para>
/// <para><see cref="global::System.Collections.Generic.List{}" /> (<c>T</c> is <see cref="global::TestModels.TestType2" />)</para>
/// <para><see cref="global::TestModels.TestType2" />[]</para>
/// <para><see cref="global::System.Collections.Generic.List{}" /> (<c>T</c> is <see cref="global::System.Collections.Generic.List{}" /> (<c>T</c> is <see cref="global::TestModels.TestType2" />[])[])</para>
/// </summary>
[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Bshox.Generator", "0.0.0.0")]
sealed partial class Serializer2 : bsx::BshoxSerializer
{
    private static readonly bsx::BshoxContract<global::TestModels.TestType2> c_TestType2;
    /// <summary>
    /// A source generated Bshox contract for <see cref="global::TestModels.TestType2" />
    /// </summary>
    /// <remarks>
    /// Bshox member layout:
    /// <para><c>1</c>: <see cref="int" /> Value1</para>
    /// <para><c>2</c>: <see cref="string" /> Value2 (implicit default)</para>
    /// </remarks>
    public static bsx::BshoxContract<global::TestModels.TestType2> TestType2 => c_TestType2;
    private static readonly bsx::BshoxContract<global::System.Collections.Generic.List<global::TestModels.TestType2>> c_ListTestType2;
    /// <summary>
    /// A Bshox contract for <see cref="global::System.Collections.Generic.List{}" /> (<c>T</c> is <see cref="global::TestModels.TestType2" />)
    /// </summary>
    public static bsx::BshoxContract<global::System.Collections.Generic.List<global::TestModels.TestType2>> ListTestType2 => c_ListTestType2;
    private static readonly bsx::BshoxContract<string?> c_String;
    private static readonly bsx::BshoxContract<int> c_Int32;
    private static readonly bsx::BshoxContract<global::TestModels.TestType2[]> c_TestType2Array;
    /// <summary>
    /// A Bshox contract for <see cref="global::TestModels.TestType2" />[]
    /// </summary>
    public static bsx::BshoxContract<global::TestModels.TestType2[]> TestType2Array => c_TestType2Array;
    private static readonly bsx::BshoxContract<global::System.Collections.Generic.List<global::TestModels.TestType2[]>> c_ListTestType2Array;
    private static readonly bsx::BshoxContract<global::System.Collections.Generic.List<global::TestModels.TestType2[]>[]> c_ListTestType2ArrayArray;
    private static readonly bsx::BshoxContract<global::System.Collections.Generic.List<global::System.Collections.Generic.List<global::TestModels.TestType2[]>[]>> c_ListListTestType2ArrayArray;
    /// <summary>
    /// A Bshox contract for <see cref="global::System.Collections.Generic.List{}" /> (<c>T</c> is <see cref="global::System.Collections.Generic.List{}" /> (<c>T</c> is <see cref="global::TestModels.TestType2" />[])[])
    /// </summary>
    public static bsx::BshoxContract<global::System.Collections.Generic.List<global::System.Collections.Generic.List<global::TestModels.TestType2[]>[]>> ListListTestType2ArrayArray => c_ListListTestType2ArrayArray;

    /// <summary>
    /// Singleton instance of <see cref="global::TestModels.Serializer2" />
    /// </summary>
    public static Serializer2 Instance { get; } = new Serializer2();

    static Serializer2()
    {
        c_TestType2 = new TestModels_TestType2__BshoxContract();
        c_ListTestType2 = bsx::DefaultContracts.List<global::TestModels.TestType2>(c_TestType2);
        c_String = bsx::DefaultContracts.String;
        c_Int32 = bsx::DefaultContracts.Int32;
        c_TestType2Array = bsx::DefaultContracts.Array<global::TestModels.TestType2>(c_TestType2);
        c_ListTestType2Array = bsx::DefaultContracts.List<global::TestModels.TestType2[]>(c_TestType2Array);
        c_ListTestType2ArrayArray = bsx::DefaultContracts.Array<global::System.Collections.Generic.List<global::TestModels.TestType2[]>>(c_ListTestType2Array);
        c_ListListTestType2ArrayArray = bsx::DefaultContracts.List<global::System.Collections.Generic.List<global::TestModels.TestType2[]>[]>(c_ListTestType2ArrayArray);
    }

    protected override bsx::IBshoxContract GetContractInternal(global::System.Type type)
    {
        if (type == typeof(global::TestModels.TestType2))
            return c_TestType2;
        if (type == typeof(global::System.Collections.Generic.List<global::TestModels.TestType2>))
            return c_ListTestType2;
        if (type == typeof(string))
            return c_String;
        if (type == typeof(int))
            return c_Int32;
        if (type == typeof(global::TestModels.TestType2[]))
            return c_TestType2Array;
        if (type == typeof(global::System.Collections.Generic.List<global::TestModels.TestType2[]>))
            return c_ListTestType2Array;
        if (type == typeof(global::System.Collections.Generic.List<global::TestModels.TestType2[]>[]))
            return c_ListTestType2ArrayArray;
        if (type == typeof(global::System.Collections.Generic.List<global::System.Collections.Generic.List<global::TestModels.TestType2[]>[]>))
            return c_ListListTestType2ArrayArray;
        return null;
    }
}
