// <auto-generated />
#nullable enable
#pragma warning disable

using bsx = global::Bshox;

using _gen_bshox_t = global::TestModels.CustomContracts1;

namespace TestModels;

/// <summary>
/// A source generated Bshox serializer that can serialize the following types:
/// <para><see cref="global::System.Collections.Generic.List{T}" /> (<c>T</c> is <see cref="int" />)</para>
/// </summary>
[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Bshox.Generator", "0.0.0.0")]
sealed partial class CustomContracts1 : bsx::BshoxSerializer
{
    private static readonly bsx::BshoxContract<global::System.Collections.Generic.List<int>> c_ListInt32;
    /// <summary>
    /// A Bshox contract for <see cref="global::System.Collections.Generic.List{T}" /> (<c>T</c> is <see cref="int" />)
    /// </summary>
    public static bsx::BshoxContract<global::System.Collections.Generic.List<int>> ListInt32 => c_ListInt32;

    /// <summary>
    /// Singleton instance of <see cref="global::TestModels.CustomContracts1" />
    /// </summary>
    public static CustomContracts1 Instance { get; } = new CustomContracts1();

    static CustomContracts1()
    {
        c_ListInt32 = global::TestModels.Test1<int>.Contract1;
    }

    protected override bsx::IBshoxContract GetContractInternal(global::System.Type type)
    {
        if (type == typeof(global::System.Collections.Generic.List<int>))
            return c_ListInt32;
        return null;
    }
}
