// <auto-generated />
#nullable disable
#pragma warning disable

using bsx = global::Bshox;

using _gen_bshox_t = global::TestModels.RecursiveTestTypeSerializer;

namespace TestModels;

/// <summary>
/// A source generated Bshox serializer that can serialize the following types:
/// <para><see cref="global::TestModels.RecursiveTestType" /></para>
/// </summary>
[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Bshox.Generator", "0.0.0.0")]
sealed partial class RecursiveTestTypeSerializer : bsx::BshoxSerializer
{
    private static readonly bsx::BshoxContract<global::TestModels.RecursiveTestType> c_RecursiveTestType;
    /// <summary>
    /// A source generated Bshox contract for <see cref="global::TestModels.RecursiveTestType" />
    /// </summary>
    /// <remarks>
    /// Bshox member layout:
    /// <para><c>1</c>: <see cref="global::TestModels.RecursiveTestType" /> Value1 (implicit default)</para>
    /// </remarks>
    public static bsx::BshoxContract<global::TestModels.RecursiveTestType> RecursiveTestType => c_RecursiveTestType;

    /// <summary>
    /// Singleton instance of <see cref="global::TestModels.RecursiveTestTypeSerializer" />
    /// </summary>
    public static RecursiveTestTypeSerializer Instance { get; } = new RecursiveTestTypeSerializer();

    static RecursiveTestTypeSerializer()
    {
        c_RecursiveTestType = new TestModels_RecursiveTestType__BshoxContract();
    }

    protected override bsx::IBshoxContract GetContractInternal(global::System.Type type)
    {
        if (type == typeof(global::TestModels.RecursiveTestType))
            return c_RecursiveTestType;
        return null;
    }
}
